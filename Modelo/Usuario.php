<?phprequire_once ('db_abstract_class.php');/** * Created by PhpStorm. * User: Pcjennyfer * Date: 28/08/2017 * Time: 4:57 */class Usuario extends db_abstract_class{private $IdUsuario;private $Nombres;private $Apellidos;private $Email;private $Celular;private $Contrasena;private $Estado;private $Fecha_Nacimiento;private $foto;    public function __construct($Usuario_data=array())    {        parent::__construct();        if (count($Usuario_data)>1){            foreach ($Usuario_data as $campo => $valor){                $this ->$campo = $valor;            }        }else{            $this->IdUsuario = "" ;            $this->Nombres = "";            $this->Apellidos ="" ;            $this->Email = "";            $this->Celular = "";            $this->Contrasena = "";            $this->Estado = "";            $this->Fecha_Nacimiento = "";            $this->foto = "";        }    }    /**     * @return mixed     */    public function getIdUsuario()    {        return $this->IdUsuario;    }    /**     * @param mixed $IdUsuario     */    public function setIdUsuario($IdUsuario)    {        $this->IdUsuario = $IdUsuario;    }    /**     * @return mixed     */    public function getNombres()    {        return $this->Nombres;    }    /**     * @param mixed $Nombres     */    public function setNombres($Nombres)    {        $this->Nombres = $Nombres;    }    /**     * @return mixed     */    public function getApellidos()    {        return $this->Apellidos;    }    /**     * @param mixed $Apellidos     */    public function setApellidos($Apellidos)    {        $this->Apellidos = $Apellidos;    }    /**     * @return mixed     */    public function getEmail()    {        return $this->Email;    }    /**     * @param mixed $Email     */    public function setEmail($Email)    {        $this->Email = $Email;    }    /**     * @return mixed     */    public function getCelular()    {        return $this->Celular;    }    /**     * @param mixed $Celular     */    public function setCelular($Celular)    {        $this->Celular = $Celular;    }    /**     * @return mixed     */    public function getContrasena()    {        return $this->Contrasena;    }    /**     * @param mixed $Contrasena     */    public function setContrasena($Contrasena)    {        $this->Contrasena = $Contrasena;    }    /**     * @return mixed     */    public function getEstado()    {        return $this->Estado;    }    /**     * @param mixed $Estado     */    public function setEstado($Estado)    {        $this->Estado = $Estado;    }    /**     * @return mixed     */    public function getFechaNacimiento()    {        return $this->Fecha_Nacimiento;    }    /**     * @param mixed $Fecha_Nacimiento     */    public function setFechaNacimiento($Fecha_Nacimiento)    {        $this->Fecha_Nacimiento = $Fecha_Nacimiento;    }    /**     * @return mixed     */    public function getFoto()    {        return $this->foto;    }    /**     * @param mixed $foto     */    public function setFoto($foto)    {        $this->foto = $foto;    }    public static function buscarForId($id)    {        // TODO: Implement buscarForId() method.    }    public static function buscar($query)    {        // TODO: Implement buscar() method.    }    public static function getAll()    {        // TODO: Implement getAll() method.    }    public function insertar()    {        $this->insertRow("INSERT INTO Little_pet.Usuario  VALUES (NULL, ?, ?, ?, ?, ?, ?, ?, ?)", array(                $this->Nombres,                $this->Apellidos ,                $this->Email ,                $this->Celular ,                $this->Contrasena ,                $this->Estado ,                $this->Fecha_Nacimiento ,                $this->foto ,            )        );        $this->Disconnect();    }    public function editar()    {        // TODO: Implement editar() method.    }    public function eliminar($id)    {        // TODO: Implement eliminar() method.    }}